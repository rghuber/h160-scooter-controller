[1/9] Performing build step for 'bootloader'
[1/1] cd /Users/rghuber/Downloads/Firmware/h160-scooter-controller/build/bootloader/esp-idf/esptool_py && /Users/rghuber/.espressif/python_env/idf5.2_py3.9_env/bin/python /Users/rghuber/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 /Users/rghuber/Downloads/Firmware/h160-scooter-controller/build/bootloader/bootloader.bin
Bootloader binary size 0x5290 bytes. 0x2d70 bytes (35%) free.
[2/7] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/h160-bluetooth.c.obj
/Users/rghuber/Downloads/Firmware/h160-scooter-controller/main/h160-bluetooth.c: In function 'gatt_svr_chr_dat_access':
/Users/rghuber/Downloads/Firmware/h160-scooter-controller/main/h160-bluetooth.c:200:15: warning: this statement may fall through [-Wimplicit-fallthrough=]
  200 |             if(readpos == flen){
      |               ^
/Users/rghuber/Downloads/Firmware/h160-scooter-controller/main/h160-bluetooth.c:204:9: note: here
  204 |         case DL_MODE_FILE:
      |         ^~~~
[3/7] Linking C static library esp-idf/main/libmain.a
[4/7] Generating ld/sections.ld
[5/7] Linking CXX executable h160-scooter-controller.elf
[6/7] Generating binary image from built executable
esptool.py v4.6.2
Creating esp32s3 image...
Merged 2 ELF sections
Successfully created esp32s3 image.
Generated /Users/rghuber/Downloads/Firmware/h160-scooter-controller/build/h160-scooter-controller.bin
[7/7] cd /Users/rghuber/Downloads/Firmware/h160-scooter-controller/build/esp-idf/esptool_py && /Users/rghuber/.espressif/python_env/idf5.2_py3.9_env/bin/python /Users/rghuber/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /Users/rghuber/Downloads/Firmware/h160-scooter-controller/build/partition_table/partition-table.bin /Users/rghuber/Downloads/Firmware/h160-scooter-controller/build/h160-scooter-controller.bin
h160-scooter-controller.bin binary size 0x9b1b0 bytes. Smallest app partition is 0x100000 bytes. 0x64e50 bytes (39%) free.
